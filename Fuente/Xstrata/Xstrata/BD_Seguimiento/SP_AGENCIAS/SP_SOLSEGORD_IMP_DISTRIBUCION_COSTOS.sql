CREATE PROCEDURE DC@RNSLIB.SP_SOLSEGORD_IMP_DISTRIBUCION_COSTOS ( 
	IN IN_NORDSR VARCHAR(10) , 
	IN IN_TIPO VARCHAR(10) , 
	IN IN_ZONA VARCHAR(2) , 
	IN IN_CCLNT NUMERIC(10, 0) , 
	IN IN_RUBRO VARCHAR(2) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC DC@RNSLIB.SP_SOLSEGORD_IMP_DISTRIBUCION_COSTOS 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = DC@RNSLIB , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN ATOMIC 
		 
	DECLARE WK_VALRMC NUMERIC ( 18 , 5 ) DEFAULT 0 ; 
	DECLARE WK_VALFOB NUMERIC ( 18 , 5 ) DEFAULT 0 ; 
	DECLARE WK_IMPCIF NUMERIC ( 18 , 5 ) DEFAULT 0 ; 
	DECLARE WK_IMPAC NUMERIC ( 18 , 5 ) DEFAULT 0 ; 
	DECLARE WK_FECHA NUMERIC ( 8 , 0 ) DEFAULT 0 ; 
	DECLARE WK_HORA NUMERIC ( 8 , 0 ) DEFAULT 0 ; 
	DECLARE WK_VALOR NUMERIC ( 18 , 5 ) DEFAULT 0 ; 
	 
	 -- Obtengo la fecha y hora actual 
	SET	WK_FECHA = YEAR ( CURRENT DATE ) * 10000 + MONTH ( CURRENT DATE ) * 100 + DAY ( CURRENT DATE ) ; 
	SET	WK_HORA = HOUR ( CURRENT TIME ) * 10000 + MINUTE ( CURRENT TIME ) * 100 + SECOND ( CURRENT TIME ) ; 
	 
		SELECT VALMRC , VALFOB , IMPCIF 
		INTO WK_VALRMC , WK_VALFOB , WK_IMPCIF 
		FROM DC@RNSLIB . DUAA 
		WHERE NORDSR = IN_NORDSR AND CZNFCC = IN_ZONA AND 
		CPLNDV = '1' AND TPSRVA = IN_TIPO AND CCMPN = 'FZ' ; 
		 
		DELETE FROM LIBORDAG . CCOSTOS WHERE PNNMOS = IN_NORDSR AND CZNFCC = IN_ZONA AND 
		CPLNDV = '1' AND TPSRVA = IN_TIPO AND CCMPN = 'FZ' AND CDVSN = 'A' AND CSRVNV = IN_RUBRO ; 
		 
	 --46 COMISION AGENCIAMIENTO 
		IF IN_RUBRO = 46 THEN 
		 
			SELECT SUM ( IMFAC$ ) 
			INTO WK_IMPAC 
			FROM DC@RNSLIB . ZZ501001 
			WHERE NORDSR = IN_NORDSR AND CZNFCC = IN_ZONA AND 
			CPLNDV = '1' AND TPSRVA = IN_TIPO AND CCMPN = 'FZ' 
			AND CSRVRL = 90 AND ESTREG = 'A' ; 
  
	 --47 GASTOS OPEARTIVOS AG.(AVISO DE DEBITO) 
		ELSEIF IN_RUBRO = 47 THEN 
		 
			SELECT SUM ( IMFAC$ ) 
			INTO WK_IMPAC 
			FROM DC@RNSLIB . ZZ501001 
			WHERE NORDSR = IN_NORDSR AND CZNFCC = IN_ZONA AND 
			CPLNDV = '1' AND TPSRVA = IN_TIPO AND CCMPN = 'FZ' 
			AND CSRVRL NOT IN ( 90 , 37 , 537 , 737 ) AND ESTREG = 'A' ; 
		 
	 --57 TRACCION 
		ELSEIF IN_RUBRO = 57 THEN 
		 
			SELECT SUM ( IMFAC$ ) 
			INTO WK_IMPAC 
			FROM DC@RNSLIB . ZZ501001 
			WHERE NORDSR = IN_NORDSR AND CZNFCC = IN_ZONA AND 
			CPLNDV = '1' AND TPSRVA = IN_TIPO AND CCMPN = 'FZ' 
			AND CSRVRL IN ( 37 , 537 , 737 ) AND ESTREG = 'A' ; 
			 
		END IF ; 
		 
	IF WK_IMPAC IS NOT NULL THEN 
		INSERT INTO LIBORDAG . CCOSTOS ( CCMPN , CDVSN , CZNFCC , CPLNDV , TPSRVA , PNNMOS , CSRVNV , VALMRC , SESTRG , FULTAC , HULTAC , CULUSA ) 
		VALUES ( 'FZ' , 'A' , IN_ZONA , '1' , IN_TIPO , IN_NORDSR , IN_RUBRO , WK_IMPAC , 'A' , WK_FECHA , WK_HORA , 'MIGRACION' ) ; 
		 
	FOR FILA AS C1 CURSOR FOR 
	 
		SELECT * FROM RZIM71 WHERE STPGCT IN ( 2 , 3 ) 
	 
	DO 
		 
		FOR FILA1 AS C2 CURSOR FOR 
	 
		SELECT * FROM DC@RNSLIB . DUAA1 
		WHERE NORDSR = IN_NORDSR AND CZNFCC = IN_ZONA AND 
		CPLNDV = '1' AND TPSRVA = IN_TIPO AND CCMPN = 'FZ' 
				 
		DO 
		 
			IF FILA . STPGCT = 1 THEN  --FOB 
			 
				SET WK_VALOR = ( WK_IMPAC * FILA1 . VALFOB ) / WK_VALFOB ;									 
													 
			ELSEIF FILA . STPGCT = 2 THEN  -- CIF 
			 
				SET WK_VALOR = ( WK_IMPAC * FILA1 . IMPCIF ) / WK_IMPCIF ; 
			 
			ELSEIF FILA . STPGCT = 3 THEN  --PESO 
			 
				SET WK_VALOR = ( WK_IMPAC * FILA1 . VALMRC ) / WK_VALRMC ; 
				 
			END IF ; 
			 
			DELETE FROM LIBORDAG . DCOSTOS WHERE PNNMOS = IN_NORDSR AND NSERIE = FILA1 . NSERIE AND CZNFCC = IN_ZONA AND 
			CPLNDV = '1' AND CCMPN = 'FZ' AND CDVSN = 'A' AND STPGCT = FILA . STPGCT AND CSRVNV = IN_RUBRO ; 
					 
			IF WK_VALOR IS NOT NULL	THEN 
				INSERT INTO LIBORDAG . DCOSTOS ( CCMPN , CDVSN , CZNFCC , CPLNDV , PNNMOS , NSERIE , NMRODC , NMITOC , CSRVNV , VALMRC , SESTRG , FULTAC , HULTAC , CULUSA , STPGCT ) 
				VALUES ( 'FZ' , 'A' , IN_ZONA , '1' , IN_NORDSR , FILA1 . NSERIE , FILA1 . NMRODC , FILA1 . NMITOC , IN_RUBRO , WK_VALOR , 'A' , WK_FECHA , WK_HORA , 'MIGRACION' , FILA . STPGCT ) ;	 
			END IF ; 
			 
		END FOR ;	 
	END FOR ; 
	END IF ; 
	END  ;
 