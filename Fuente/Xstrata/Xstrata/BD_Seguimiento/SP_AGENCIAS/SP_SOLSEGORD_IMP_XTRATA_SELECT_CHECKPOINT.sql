 CREATE PROCEDURE DC@RNSLIB.SP_SOLSEGORD_IMP_XTRATA_SELECT_CHECKPOINT ( 
	IN IN_NORSCI VARCHAR(10) , 
	IN IN_PNDCTR VARCHAR(10) , 
	IN IN_ZONA VARCHAR(2) , 
	IN IN_CCLNT NUMERIC(10, 0) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC DC@RNSLIB.SP_SOLSEGORD_IMP_XTRATA_SELECT_CHECKPOINT 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = DC@RNSLIB , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN ATOMIC 
--------------------------------------- 
-- Variables de Trabajo - Seguridad  -- 
--------------------------------------- 
DECLARE WK_FECHA NUMERIC ( 10 , 0 ) DEFAULT 0 ; 
DECLARE WK_HORA NUMERIC ( 10 , 0 ) DEFAULT 0 ; 
DECLARE IN_VALVAR VARCHAR ( 50 ) DEFAULT '' ; 
--------------------------- 
-- Variables de Trabajo  -- 
--------------------------- 
DECLARE WK_CCLNT NUMERIC ( 6 , 0 ) DEFAULT 0 ; 
DECLARE WK_CCLNT_YRC NUMERIC ( 6 , 0 ) DEFAULT 0 ; 
DECLARE WK_SIDYRC VARCHAR ( 22 ) DEFAULT '' ; 
DECLARE WK_NNROPAR INTEGER DEFAULT 0 ; 
DECLARE WK_STRSQL VARCHAR ( 1000 ) DEFAULT '' ; 
DECLARE WK_NAVE VARCHAR ( 15 ) ; 
DECLARE WK_TARJA VARCHAR ( 15 ) ; 
DECLARE WK_PREVIO VARCHAR ( 15 ) ; 
DECLARE WK_AFORO_FISICO VARCHAR ( 15 ) ; 
DECLARE WK_LEVANTE VARCHAR ( 15 ) ; 
DECLARE WK_RETIRO_CARGA VARCHAR ( 15 ) ; 
DECLARE WK_ENTREGA_CARGA VARCHAR ( 15 ) ; 
DECLARE WK_RECEPCION VARCHAR ( 15 ) DEFAULT '' ; 
DECLARE WK_CARGA VARCHAR ( 15 ) DEFAULT '' ; 
DECLARE WK_EMBARQUE VARCHAR ( 15 ) DEFAULT '' ; 
DECLARE WK_PAGO VARCHAR ( 15 ) ; 
DECLARE WK_NUMERACION VARCHAR ( 15 ) ; 
DECLARE WK_NMRODC VARCHAR ( 30 ) DEFAULT '' ; 
DECLARE WK_NMITOC NUMERIC ( 6 , 0 ) DEFAULT 0 ; 
DECLARE WK_FECCHK DATE DEFAULT NULL ; 
-- Cursor para mostrar el resultado 
DECLARE CU_02 SCROLL CURSOR WITH RETURN FOR S2 ; 
-- Creamos la tabla temporal que contiene los datos del Reporte 
DECLARE GLOBAL TEMPORARY TABLE SESSION . CHECKPOINT ( 
CCODCP VARCHAR ( 6 ) , DESDCP VARCHAR ( 800 ) , DFECCP DATE ) WITH REPLACE NOT LOGGED ; 
  
-- Obtengo la fecha y hora actual 
SET WK_FECHA = YEAR ( CURRENT DATE ) * 10000 + MONTH ( CURRENT DATE ) * 100 + DAY ( CURRENT DATE ) ; 
SET WK_HORA = HOUR ( CURRENT TIME ) * 10000 + MINUTE ( CURRENT TIME ) * 100 + SECOND ( CURRENT TIME ) ; 
  
SELECT VALVAR INTO IN_VALVAR FROM DC@RNSLIB . ZZ202201 WHERE CVARBL = 'PORTAL' AND NOMVAR = IN_CCLNT ; 
IF IN_VALVAR IS NULL THEN 
SET WK_CCLNT_YRC = 0 ; 
ELSE 
SET WK_CCLNT_YRC = IN_VALVAR ; 
END IF ; 
/* 
SELECT A.DDNAVE AS NAVE, 
SUBSTR(CAST(B.DDOBVL AS CHAR (30)) ,1,10)  AS TARJA, 
SUBSTR(CAST(B.DDAFPR AS CHAR (30)) ,1,10) AS PREVIO, 
SUBSTR(CAST(C.DDFINA AS CHAR (30)) ,1,10) AS AFORO_FISICO , 
SUBSTR(CAST(D.DDINIA AS CHAR (30)) ,1,10) AS LEVANTE , 
SUBSTR(CAST(E.DDFINA AS CHAR (30)) ,1,10) AS RETIRO_CARGA , 
SUBSTR(CAST(E.DDFINA AS CHAR (30)) ,1,10) AS ENTREGA_CARGA, 
SUBSTR(CAST(B.DDPGDR AS CHAR (30)) ,1,10) AS PAGO, 
SUBSTR(CAST(B.DDNUME AS CHAR (30)) ,1,10) AS NUMERACION, 
B.DDRDDC  AS RECEPCION, 
B.DDCRDP  AS CARGA, 
B.DDOEMB  AS EMBARQUE 
INTO WK_NAVE,WK_TARJA,WK_PREVIO,WK_AFORO_FISICO,WK_LEVANTE, 
WK_RETIRO_CARGA,WK_ENTREGA_CARGA,WK_PAGO,WK_NUMERACION,WK_RECEPCION,WK_CARGA, 
WK_EMBARQUE 
FROM LIBORDAG.DORDENES A 
LEFT OUTER JOIN LIBORDAG.DSEGIMP B ON A.PNCDTR = B.PNCDTR 
LEFT OUTER JOIN LIBORDAG.RACBASOS C ON A.PNCDTR = C.PNCDTR AND C.PNCDAC = 'I13' 
LEFT OUTER JOIN LIBORDAG.RACBASOS D ON A.PNCDTR = D.PNCDTR AND D.PNCDAC = 'I12' 
LEFT OUTER JOIN LIBORDAG.RACBASOS E ON A.PNCDTR = E.PNCDTR AND E.PNCDAC = 'I15' 
WHERE  A.PNCDCO = 'FZ' AND A.PNCDNG= 'A' AND  A.PNDCPL ='1' 
  
AND A.PNCDZO = IN_ZONA 
AND A.PNNMOS =   IN_NORSCI; 
*/ 
  
SELECT A . DDNAVE AS NAVE , 
SUBSTR ( CAST ( B . DDOBVL AS CHAR ( 30 ) ) , 1 , 10 ) AS TARJA , 
SUBSTR ( CAST ( B . DDAFPR AS CHAR ( 30 ) ) , 1 , 10 ) AS PREVIO , 
SUBSTR ( CAST ( C . DDFINA AS CHAR ( 30 ) ) , 1 , 10 ) AS AFORO_FISICO , 
SUBSTR ( CAST ( D . DDINIA AS CHAR ( 30 ) ) , 1 , 10 ) AS LEVANTE , 
SUBSTR ( CAST ( E . DDFINA AS CHAR ( 30 ) ) , 1 , 10 ) AS RETIRO_CARGA , 
SUBSTR ( CAST ( E . DDFINA AS CHAR ( 30 ) ) , 1 , 10 ) AS ENTREGA_CARGA , 
SUBSTR ( CAST ( B . DDPGDR AS CHAR ( 30 ) ) , 1 , 10 ) AS PAGO , 
SUBSTR ( CAST ( B . DDNUME AS CHAR ( 30 ) ) , 1 , 10 ) AS NUMERACION , 
SUBSTR ( CAST ( A . DDREGI AS CHAR ( 30 ) ) , 1 , 10 ) AS RECEPCION , 
B . DDCRDP AS CARGA , 
F . DDEMIS AS EMBARQUE 
INTO WK_NAVE , WK_TARJA , WK_PREVIO , WK_AFORO_FISICO , WK_LEVANTE , 
WK_RETIRO_CARGA , WK_ENTREGA_CARGA , WK_PAGO , WK_NUMERACION , WK_RECEPCION , WK_CARGA , 
WK_EMBARQUE 
FROM LIBORDAG . DORDENES A 
LEFT OUTER JOIN LIBORDAG . DSEGIMP B ON A . PNCDTR = B . PNCDTR 
LEFT OUTER JOIN LIBORDAG . RACBASOS C ON A . PNCDTR = C . PNCDTR AND C . PNCDAC = 'I13' 
LEFT OUTER JOIN LIBORDAG . RACBASOS D ON A . PNCDTR = D . PNCDTR AND D . PNCDAC = 'I12' 
LEFT OUTER JOIN LIBORDAG . RACBASOS E ON A . PNCDTR = E . PNCDTR AND E . PNCDAC = 'I15' 
LEFT OUTER JOIN LIBORDAG . DDOCOS F ON A . PNCDTR = F . PNCDTR AND F . PNCDDC = '004' 
WHERE A . PNCDCO = 'FZ' AND A . PNCDNG = 'A' AND A . PNDCPL = '1' 
AND A . PNCDZO = IN_ZONA 
AND A . PNNMOS = IN_NORSCI ; 
  
/* 
  
SELECT NMRODC,NMITOC  
INTO WK_NMRODC,WK_NMITOC 
FROM DC@RNSLIB.DUAA1  
WHERE NORDSR =  IN_NORSCI AND CZNFCC = IN_ZONA AND  CCMPN='FZ'  
ORDER BY NSERIE DESC FETCH FIRST ROWS ONLY; 
*/ 
--IF WK_NMRODC <> ' ' THEN 
  
/*FOR FIL AS CU CURSOR FOR 
  
SELECT NMRODC,NMITOC  
FROM DC@RNSLIB.DUAA1  
WHERE NORDSR =  IN_NORSCI AND CZNFCC = IN_ZONA AND  CCMPN='FZ' AND TPSRVA LIKE 'I%' 
  
DO 
*/ 
	FOR FILA AS CU_01 CURSOR FOR 
  
	SELECT * FROM DC@RNSLIB . RZOL45 WHERE CCLNT = IN_CCLNT AND SESTRG <> '*' 
  
	DO 
	 --SET WK_FECCHK = WK_NAVE; 
  
	 
	IF FILA . NESTDO = '108' THEN 
		IF WK_NAVE <> '' THEN 
			SET WK_FECCHK = CAST ( WK_NAVE AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;	 
	ELSEIF FILA . NESTDO = '109' THEN 
		IF WK_RECEPCION <> '' THEN 
			SET WK_FECCHK = CAST ( WK_RECEPCION AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;	 
		 
	ELSEIF FILA . NESTDO = '116' THEN 
		IF WK_TARJA <> '' THEN 
			SET WK_FECCHK = CAST ( WK_TARJA AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;		 
	ELSEIF FILA . NESTDO = '117' THEN	 
		IF WK_PREVIO <> '' THEN 
			SET WK_FECCHK = CAST ( WK_PREVIO AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;		 
	ELSEIF FILA . NESTDO = '121' THEN	 
		IF WK_NUMERACION <> '' THEN 
			SET WK_FECCHK = CAST ( WK_NUMERACION AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;		 
  
	ELSEIF FILA . NESTDO = '122' THEN	 
		IF WK_PAGO <> '' THEN 
			SET WK_FECCHK = CAST ( WK_PAGO AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;		 
			 
	ELSEIF FILA . NESTDO = '123' THEN	 
		IF WK_LEVANTE <> '' THEN 
			SET WK_FECCHK = CAST ( WK_LEVANTE AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;		 
  
	ELSEIF FILA . NESTDO = '124' THEN	 
		IF WK_ENTREGA_CARGA <> '' THEN 
			SET WK_FECCHK = CAST ( WK_ENTREGA_CARGA AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;		 
		 
	ELSEIF FILA . NESTDO = '150' THEN	 
  
		IF WK_AFORO_FISICO <> '' THEN 
			SET WK_FECCHK = CAST ( WK_AFORO_FISICO AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;	 
  
	ELSEIF FILA . NESTDO = '151' THEN	 
		IF WK_RETIRO_CARGA <> '' THEN 
			SET WK_FECCHK = CAST ( WK_RETIRO_CARGA AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;	 
  
	ELSEIF FILA . NESTDO = '152' THEN	 
		IF WK_CARGA <> '' THEN 
			SET WK_FECCHK = CAST ( WK_CARGA AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;	 
  
	ELSEIF FILA . NESTDO = '107' THEN	 
		IF WK_EMBARQUE <> '' THEN 
			SET WK_FECCHK = CAST ( WK_EMBARQUE AS DATE ) ; 
		ELSE 
			SET WK_FECCHK = NULL ; 
		END IF ;	 
	ELSE 
		SET WK_FECCHK = NULL ; 
	END IF ; 
	 
	 --IF  WK_FECCHK IS NOT  null THEN 
	 
	INSERT INTO SESSION . CHECKPOINT ( CCODCP , DESDCP , DFECCP ) 
	VALUES ( FILA . NESTDO , FILA . TCOLUM , WK_FECCHK ) ; 
	 --END IF; 
	 
	/* 
	INSERT INTO SESSION . T008_CHECKPOINT ( CCLIENT , SNROOC  , SNROITE  , NNROPAR  ,  
	CCODCP  , NSEC  , DFECCP  , SCOMENT  ,  
	NORDEN  , CUSUCRE , DFECCRE  , CUSUACT  , DFECACT  ) 
	VALUES ( WK_CCLNT_YRC,WK_NORCML,WK_NRITEM,'1','RNS108',1,WK_FECCHK,'', 
	0,'',WK_FECCHK,'',WK_FECCHK ) ;  
	*/ 
	END FOR ; 
--END FOR; 
  
--END IF; 
  
SET WK_STRSQL = 'Select * From SESSION.CHECKPOINT Order By 1 ' ; 
-- Realizamos la preparación de la Consulta para ser ejecutada 
PREPARE S2 FROM WK_STRSQL ; 
OPEN CU_02 ; 
  
END  ;
