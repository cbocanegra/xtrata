 DROP  PROCEDURE DC@RNSLIB.SP_SOLSEGORD_IMP_ACTUALIZAR_CHECKPOINT_XSTRATA

 CREATE PROCEDURE DC@RNSLIB.SP_SOLSEGORD_IMP_ACTUALIZAR_CHECKPOINT_XSTRATA ( 
	IN IN_NORSCI VARCHAR(10) , 
	IN IN_PNDCTR VARCHAR(10) , 
	IN IN_ZONA VARCHAR(2) , 
	IN IN_CODIGO VARCHAR(10) , 
	IN IN_FECHA VARCHAR(30) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC DC@RNSLIB.SP_SOLSEGORD_IMP_ACTUALIZAR_CHECKPOINT_XSTRATA 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = DC@RNSLIB , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN ATOMIC 
--------------------------------------- 
-- Variables de Trabajo - Seguridad  -- 
--------------------------------------- 
DECLARE WK_FECHA NUMERIC ( 10 , 0 ) DEFAULT 0 ; 
DECLARE WK_HORA NUMERIC ( 10 , 0 ) DEFAULT 0 ; 
DECLARE IN_VALVAR VARCHAR ( 50 ) DEFAULT '' ; 
--------------------------- 
-- Variables de Trabajo  -- 
--------------------------- 
DECLARE WK_CCLNT NUMERIC ( 6 , 0 ) DEFAULT 0 ; 
DECLARE WK_CCLNT_YRC NUMERIC ( 6 , 0 ) DEFAULT 0 ; 
DECLARE WK_SIDYRC VARCHAR ( 22 ) DEFAULT '' ; 
DECLARE WK_NNROPAR INTEGER DEFAULT 0 ; 
DECLARE WK_STRSQL VARCHAR ( 1000 ) DEFAULT '' ; 
DECLARE WK_NAVE VARCHAR ( 15 ) ; 
DECLARE WK_TARJA VARCHAR ( 15 ) ; 
DECLARE WK_PREVIO VARCHAR ( 15 ) ; 
DECLARE WK_AFORO_FISICO VARCHAR ( 15 ) ; 
DECLARE WK_LEVANTE VARCHAR ( 15 ) ; 
DECLARE WK_RETIRO_CARGA VARCHAR ( 15 ) ; 
DECLARE WK_ENTREGA_CARGA VARCHAR ( 15 ) ; 
DECLARE WK_RECEPCION VARCHAR ( 15 ) DEFAULT '' ; 
DECLARE WK_CARGA VARCHAR ( 15 ) DEFAULT '' ; 
DECLARE WK_EMBARQUE VARCHAR ( 15 ) DEFAULT '' ; 
DECLARE WK_PAGO VARCHAR ( 15 ) ; 
DECLARE WK_NUMERACION VARCHAR ( 15 ) ; 
DECLARE WK_NMRODC VARCHAR ( 30 ) DEFAULT '' ; 
DECLARE WK_NMITOC NUMERIC ( 6 , 0 ) DEFAULT 0 ; 
DECLARE WK_FECCHK DATE DEFAULT NULL ; 
-- Cursor para mostrar el resultado 
  
-- Creamos la tabla temporal que contiene los datos del Reporte 
  
-- Obtengo la fecha y hora actual 
SET WK_FECHA = YEAR ( CURRENT DATE ) * 10000 + MONTH ( CURRENT DATE ) * 100 + DAY ( CURRENT DATE ) ; 
SET WK_HORA = HOUR ( CURRENT TIME ) * 10000 + MINUTE ( CURRENT TIME ) * 100 + SECOND ( CURRENT TIME ) ; 
/* 
SELECT A.DDNAVE AS NAVE, 
SUBSTR(CAST(B.DDOBVL AS CHAR (30)) ,1,10)  AS TARJA, 
SUBSTR(CAST(B.DDAFPR AS CHAR (30)) ,1,10) AS PREVIO, 
SUBSTR(CAST(C.DDFINA AS CHAR (30)) ,1,10) AS AFORO_FISICO , 
SUBSTR(CAST(D.DDINIA AS CHAR (30)) ,1,10) AS LEVANTE , 
SUBSTR(CAST(E.DDFINA AS CHAR (30)) ,1,10) AS RETIRO_CARGA , 
SUBSTR(CAST(E.DDFINA AS CHAR (30)) ,1,10) AS ENTREGA_CARGA, 
SUBSTR(CAST(B.DDPGDR AS CHAR (30)) ,1,10) AS PAGO, 
SUBSTR(CAST(B.DDNUME AS CHAR (30)) ,1,10) AS NUMERACION, 
B.DDRDDC  AS RECEPCION, 
B.DDCRDP  AS CARGA, 
B.DDOEMB  AS EMBARQUE 
INTO WK_NAVE,WK_TARJA,WK_PREVIO,WK_AFORO_FISICO,WK_LEVANTE, 
WK_RETIRO_CARGA,WK_ENTREGA_CARGA,WK_PAGO,WK_NUMERACION,WK_RECEPCION,WK_CARGA, 
WK_EMBARQUE 
FROM LIBORDAG.DORDENES A 
LEFT OUTER JOIN LIBORDAG.DSEGIMP B ON A.PNCDTR = B.PNCDTR 
LEFT OUTER JOIN LIBORDAG.RACBASOS C ON A.PNCDTR = C.PNCDTR AND C.PNCDAC = 'I13' 
LEFT OUTER JOIN LIBORDAG.RACBASOS D ON A.PNCDTR = D.PNCDTR AND D.PNCDAC = 'I12' 
LEFT OUTER JOIN LIBORDAG.RACBASOS E ON A.PNCDTR = E.PNCDTR AND E.PNCDAC = 'I15' 
WHERE  A.PNCDCO = 'FZ' AND A.PNCDNG= 'A' AND  A.PNDCPL ='1' 
AND A.PNCDZO = IN_ZONA 
AND A.PNNMOS =   IN_NORSCI; 
  
SELECT NMRODC,NMITOC  
INTO WK_NMRODC,WK_NMITOC 
FROM DC@RNSLIB.DUAA1  
WHERE NORDSR =  IN_NORSCI AND CZNFCC = IN_ZONA AND  CCMPN='FZ'  
ORDER BY NSERIE DESC FETCH FIRST ROWS ONLY; 
*/ 
--IF WK_NMRODC <> ' ' THEN 
  
/*FOR FIL AS CU CURSOR FOR 
  
SELECT NMRODC,NMITOC  
FROM DC@RNSLIB.DUAA1  
WHERE NORDSR =  IN_NORSCI AND CZNFCC = IN_ZONA AND  CCMPN='FZ' AND TPSRVA LIKE 'I%' 
  
DO 
*/ 
	 
	 --SET WK_FECCHK = WK_NAVE; 
	IF IN_CODIGO = '108' THEN 
	 --NAVE 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDNAVE = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
			 
			UPDATE LIBORDAG . DORDENES 
			SET DDNAVE = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
			 
			UPDATE LIBORDAG . DDOCEMB 
			SET DDNAVE = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
		ELSE 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDNAVE = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
			 
			UPDATE LIBORDAG . DORDENES 
			SET DDNAVE = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
			 
			UPDATE LIBORDAG . DDOCEMB 
			SET DDNAVE = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
		END IF ; 
		 
	ELSEIF IN_CODIGO = '109' THEN 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDRDDC = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
		ELSE 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDRDDC = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
		END IF ;	 
						 
	ELSEIF IN_CODIGO = '116' THEN 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDOBVL = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
		ELSE 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDOBVL = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
		END IF ; 
		 
	ELSEIF IN_CODIGO = '117' THEN	 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDAFPR = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
		ELSE 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDAFPR = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
		END IF ;	 
		 
	ELSEIF IN_CODIGO = '121' THEN	 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDNUME = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ;  -- AND PNCDDC = '001'; 
		ELSE 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDNUME = NULL 
			WHERE PNCDTR = IN_PNDCTR ;  -- AND PNCDDC = '001'; 
		END IF ; 
  
	ELSEIF IN_CODIGO = '122' THEN	 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDPGDR = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
		ELSE 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDPGDR = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
		END IF ; 
			 
	ELSEIF IN_CODIGO = '123' THEN	 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . RACBASOS 
			SET DDINIA = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR AND PNCDAC = 'I12' ; 
		ELSE 
			UPDATE LIBORDAG . RACBASOS 
			SET DDINIA = NULL 
			WHERE PNCDTR = IN_PNDCTR AND PNCDAC = 'I12' ;		 
		END IF ; 
  
	ELSEIF IN_CODIGO = '124' THEN	 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . RACBASOS 
			SET DDFINA = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR AND PNCDAC = 'I15' ; 
		ELSE 
			UPDATE LIBORDAG . RACBASOS 
			SET DDFINA = NULL 
			WHERE PNCDTR = IN_PNDCTR AND PNCDAC = 'I15' ; 
		END IF ; 
		 
	ELSEIF IN_CODIGO = '150' THEN	 
  
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . RACBASOS 
			SET DDFINA = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR AND PNCDAC = 'I13' ; 
		ELSE 
			UPDATE LIBORDAG . RACBASOS 
			SET DDFINA = NULL 
			WHERE PNCDTR = IN_PNDCTR AND PNCDAC = 'I13' ; 
		END IF ; 
  
	ELSEIF IN_CODIGO = '151' THEN	 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . RACBASOS 
			SET DDFINA = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR AND PNCDAC = 'I15' ; 
		ELSE 
			UPDATE LIBORDAG . RACBASOS 
			SET DDFINA = NULL 
			WHERE PNCDTR = IN_PNDCTR AND PNCDAC = 'I15' ; 
		END IF ; 
  
	ELSEIF IN_CODIGO = '152' THEN	 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDCRDP = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
		ELSE 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDCRDP = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
		END IF ;	 
  
	ELSEIF IN_CODIGO = '107' THEN	 
		IF IN_FECHA <> '' THEN 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDOEMB = IN_FECHA 
			WHERE PNCDTR = IN_PNDCTR ; 
		ELSE 
			UPDATE LIBORDAG . DSEGIMP 
			SET DDOEMB = NULL 
			WHERE PNCDTR = IN_PNDCTR ; 
		END IF ;		 
	END IF ; 
		 
	IF EXISTS ( SELECT * FROM LIBORDAG . TINFOCHK WHERE PNDCTR = IN_PNDCTR ) THEN 
		UPDATE LIBORDAG . TINFOCHK SET SESENV = ' ' 
		WHERE PNDCTR = IN_PNDCTR ; 
	ELSE		 
		INSERT INTO LIBORDAG . TINFOCHK ( PNNMOS , CCLNT , PNDCTR ) VALUES ( IN_NORSCI , '3177' , IN_PNDCTR ) ; 
	END IF ; 
	 
END  

GO



